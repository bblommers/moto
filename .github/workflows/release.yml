name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:
  release-moto-job:
    runs-on: ubuntu-latest
    name: Release Moto
    env:
      VERSION: 0.0.0
    steps:
    - name: Set Env
      run: echo "::set-env name=VERSION::${{ github.event.inputs.version }}"
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools packaging twine --upgrade
    - name: Verify Tag does not exist
      run: |
        ! git rev-parse $VERSION || { echo "Ensure that no tag exists for $VERSION" ; exit 1; }
    - name: Verify supplied version exists in the CHANGELOG
      run: |
        grep $VERSION CHANGELOG.md || { echo "Ensure that the CHANGELOG contains an entry for $VERSION" ; exit 1; }
    - name: Set version number
      run: python update_version_from_git.py $VERSION
    - name: Build
      run: python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        repository_url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    - name: Tag version on Github
      run: |
        git tag $VERSION
        git push origin $VERSION
    - name: Build Docker release
      run: |
        docker build -t bblommers/mototestreleases . --tag mototestreleases:$VERSION
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: bblommers/mototestreleases:$VERSION
